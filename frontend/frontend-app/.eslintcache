[{"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\index.tsx":"1","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\store.ts":"2","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\App.tsx":"3","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\help-reducer.ts":"4","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\appData-reducer.ts":"5","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\user-reducer.ts":"6","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\UserActionCreators.ts":"7","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\user-selector.ts":"8","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\hoc\\withSuspense.tsx":"9","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Header\\Header.tsx":"10","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Main\\Main.tsx":"11","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Testing.tsx":"12","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Registration\\Registration.tsx":"13","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\Help.tsx":"14","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Auth\\Auth.tsx":"15","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramConstructor.jsx":"16","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\appData-selector.ts":"17","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\help-selector.ts":"18","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ThunkCreators\\userThunks.ts":"19","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section.tsx":"20","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\HelpArticles\\GeneralArticle.tsx":"21","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\HelpArticleList\\ArticleList.tsx":"22","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\DiagramActionCreators.ts":"23","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\HelpArticles\\EquipmentArticle.jsx":"24","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\ElementsList\\ElementsList.tsx":"25","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\api\\userApi.ts":"26","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\HelpActionCreators.ts":"27","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ThunkCreators\\testingThunks.ts":"28","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\api\\testingApi.ts":"29","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\types\\apiTypes.ts":"30","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\Field.jsx":"31","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\NodeComponent.jsx":"32","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\ConnectionLine.jsx":"33","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\Edge.jsx":"34","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\SplitDiagramField.jsx":"35","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\diagram-selector.ts":"36","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\HelpFunctions.ts":"37","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\TestingActionCreators.ts":"38","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\DiagramField.tsx":"39","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\testing-selector.ts":"40","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResult.tsx":"41","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\types\\generalTypes.ts":"42","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\functions\\Random.ts":"43","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\PanelControl.tsx":"44","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\CustomBarChar.tsx":"45","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\CustomTooltip.jsx":"46","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultPoints\\ViewResultPoints.tsx":"47","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\TestReducers\\testing-reducer.ts":"48","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\TestReducers\\diagramElements-reducer.ts":"49","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\TestReducers\\calc-reducer.ts":"50","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\CalcActionsCreators.ts":"51","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\calc-selector.ts":"52","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Header\\DropMenu.tsx":"53","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultPoints\\PointTest.tsx":"54","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultTypes\\PointTypesSelection.tsx":"55","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\functions\\PointTestFunctions.ts":"56","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultPoints\\ChosenTypes.tsx":"57","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultChoseColumns\\ChoseColumns.tsx":"58","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\SuccessDialog.tsx":"59","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\MistakeDialog.tsx":"60","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultTableCalc\\TableCalc.tsx":"61","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\MaterialSelect.tsx":"62","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\MaterialTable.tsx":"63"},{"size":417,"mtime":1621938219759,"results":"64","hashOfConfig":"65"},{"size":1056,"mtime":1621490426025,"results":"66","hashOfConfig":"65"},{"size":2716,"mtime":1622008901295,"results":"67","hashOfConfig":"65"},{"size":576,"mtime":1619960079434,"results":"68","hashOfConfig":"65"},{"size":5552,"mtime":1622043730605,"results":"69","hashOfConfig":"65"},{"size":3071,"mtime":1619960079434,"results":"70","hashOfConfig":"65"},{"size":940,"mtime":1619960079418,"results":"71","hashOfConfig":"65"},{"size":1103,"mtime":1619960079434,"results":"72","hashOfConfig":"65"},{"size":310,"mtime":1619960079418,"results":"73","hashOfConfig":"65"},{"size":1105,"mtime":1621509509453,"results":"74","hashOfConfig":"65"},{"size":1165,"mtime":1619960079403,"results":"75","hashOfConfig":"65"},{"size":469,"mtime":1619960079418,"results":"76","hashOfConfig":"65"},{"size":8495,"mtime":1619960079403,"results":"77","hashOfConfig":"65"},{"size":1321,"mtime":1619960079403,"results":"78","hashOfConfig":"65"},{"size":2849,"mtime":1620889275956,"results":"79","hashOfConfig":"65"},{"size":4973,"mtime":1620881363244,"results":"80","hashOfConfig":"65"},{"size":298,"mtime":1621742978697,"results":"81","hashOfConfig":"65"},{"size":137,"mtime":1619960079434,"results":"82","hashOfConfig":"65"},{"size":2312,"mtime":1619960079418,"results":"83","hashOfConfig":"65"},{"size":953,"mtime":1619960079403,"results":"84","hashOfConfig":"65"},{"size":4135,"mtime":1619960079403,"results":"85","hashOfConfig":"65"},{"size":878,"mtime":1619960079403,"results":"86","hashOfConfig":"65"},{"size":1179,"mtime":1620129894939,"results":"87","hashOfConfig":"65"},{"size":8558,"mtime":1619960079403,"results":"88","hashOfConfig":"65"},{"size":1858,"mtime":1620107553617,"results":"89","hashOfConfig":"65"},{"size":1429,"mtime":1619960079371,"results":"90","hashOfConfig":"65"},{"size":165,"mtime":1619960079418,"results":"91","hashOfConfig":"65"},{"size":2813,"mtime":1621496367312,"results":"92","hashOfConfig":"65"},{"size":2851,"mtime":1621489464871,"results":"93","hashOfConfig":"65"},{"size":1433,"mtime":1620886741363,"results":"94","hashOfConfig":"65"},{"size":4579,"mtime":1620132569382,"results":"95","hashOfConfig":"65"},{"size":969,"mtime":1620110316473,"results":"96","hashOfConfig":"65"},{"size":565,"mtime":1620045974170,"results":"97","hashOfConfig":"65"},{"size":698,"mtime":1620045974230,"results":"98","hashOfConfig":"65"},{"size":1707,"mtime":1620132552268,"results":"99","hashOfConfig":"65"},{"size":586,"mtime":1620118458977,"results":"100","hashOfConfig":"65"},{"size":1777,"mtime":1620128347541,"results":"101","hashOfConfig":"65"},{"size":432,"mtime":1621490737504,"results":"102","hashOfConfig":"65"},{"size":1617,"mtime":1620138008124,"results":"103","hashOfConfig":"65"},{"size":13,"mtime":1621490638685,"results":"104","hashOfConfig":"65"},{"size":2945,"mtime":1621935537508,"results":"105","hashOfConfig":"65"},{"size":2281,"mtime":1622043853039,"results":"106","hashOfConfig":"65"},{"size":143,"mtime":1620908680993,"results":"107","hashOfConfig":"65"},{"size":4592,"mtime":1621935653146,"results":"108","hashOfConfig":"65"},{"size":1087,"mtime":1621417110370,"results":"109","hashOfConfig":"65"},{"size":1082,"mtime":1621417110351,"results":"110","hashOfConfig":"65"},{"size":1990,"mtime":1621936993106,"results":"111","hashOfConfig":"65"},{"size":1323,"mtime":1621490513061,"results":"112","hashOfConfig":"65"},{"size":4143,"mtime":1621490426047,"results":"113","hashOfConfig":"65"},{"size":11901,"mtime":1622046558523,"results":"114","hashOfConfig":"65"},{"size":1771,"mtime":1622043894062,"results":"115","hashOfConfig":"65"},{"size":2606,"mtime":1622047900367,"results":"116","hashOfConfig":"65"},{"size":3557,"mtime":1621517804303,"results":"117","hashOfConfig":"65"},{"size":3849,"mtime":1622039402838,"results":"118","hashOfConfig":"65"},{"size":4559,"mtime":1622037516918,"results":"119","hashOfConfig":"65"},{"size":7346,"mtime":1622051022545,"results":"120","hashOfConfig":"65"},{"size":1346,"mtime":1621936971257,"results":"121","hashOfConfig":"65"},{"size":5541,"mtime":1622044005199,"results":"122","hashOfConfig":"65"},{"size":2234,"mtime":1622047498937,"results":"123","hashOfConfig":"65"},{"size":2065,"mtime":1622047501286,"results":"124","hashOfConfig":"65"},{"size":1376,"mtime":1622049806587,"results":"125","hashOfConfig":"65"},{"size":743,"mtime":1622021209186,"results":"126","hashOfConfig":"65"},{"size":1137,"mtime":1622050444497,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"6iym17",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"130"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"130"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"163"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"130"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"130"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"130"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"130"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\index.tsx",[],["263","264"],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\store.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\App.tsx",["265"],"import React, {useEffect} from \"react\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Main from \"./components/Main/Main\";\r\nimport {Route, Switch, Redirect, withRouter} from \"react-router-dom\";\r\nimport DiagramConstructor from \"./components/Testing/Section1/DiagramConstructor/DiagramConstructor\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport Testing from \"./components/Testing/Testing\";\r\nimport Auth from \"./components/Auth/Auth\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {GetUserInfo} from \"./redux/selectors/user-selector\";\r\nimport Registration from \"./components/Registration/Registration\";\r\nimport {InitUser} from \"./redux/ActionCreators/UserActionCreators\";\r\nimport ViewResultPoints from \"./components/Testing/Section3/ViewResultPoints/ViewResultPoints\";\r\nimport PointTest from \"./components/Testing/Section3/ViewResultPoints/PointTest\";\r\nimport ViewResult from \"./components/Testing/Section3/ViewResult\";\r\nimport ChoseColumns from \"./components/Testing/Section3/ViewResultChoseColumns/ChoseColumns\";\r\n\r\nconst Help = React.lazy(() => import ('./components/Help/Help'));\r\n\r\nconst App = (props: any) => {\r\n    const userInfo = useSelector(GetUserInfo);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(InitUser());\r\n    }, [dispatch])\r\n\r\n    if (!userInfo) {\r\n        if (props.location.pathname === \"/auth\" || props.location.pathname === \"/reg\"){\r\n            return <>\r\n                <Switch>\r\n                    <Route exact path=\"/auth\" render={() => <Auth/>}/>\r\n                    <Route exact path=\"/reg\" render={() => <Registration/>}/>\r\n                </Switch>\r\n            </>\r\n\r\n        }\r\n        else\r\n            return <Redirect to={\"/auth\"}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Switch>\r\n                <Route exact path=\"/\" render={() => <Redirect to={'/home'}/>}/>\r\n                <Route exact path=\"/auth\" render={() => <Redirect to={'/home'}/>}/>\r\n                <Route path='/home' render={() => <Main/>}/>\r\n                <Route path=\"/help\" render={withSuspense(Help)}/>\r\n                <Route exact path=\"/testing\" render={() => <Testing/>}/>\r\n                <Route path=\"/testing/diagram\" render={() => <DiagramConstructor/>}/>\r\n                <Route exact path=\"/testing/viewPoints\" render={() => <ViewResultPoints/>}/>\r\n                <Route exact path=\"/testing/viewPoints/Point/:pointName\" children={<PointTest/>} />\r\n                <Route exact path=\"/testing/viewPoints/Point/:pointName/Measure/:typeId\" children={<ViewResult/>} />\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\n// render={() => <ViewResultPoint/>}\r\n\r\nexport default withRouter(App);\r\n","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\help-reducer.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\appData-reducer.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\user-reducer.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\UserActionCreators.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\user-selector.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\hoc\\withSuspense.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Main\\Main.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Testing.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Registration\\Registration.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\Help.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Auth\\Auth.tsx",["266","267","268","269"],"import React from \"react\";\r\nimport {Form, Formik, FormikValues, useField} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport style from \"./Auth.module.css\"\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {LogInUser} from \"../../redux/ThunkCreators/userThunks\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {GetAuthError, GetUserAccessToken, GetUserInfo} from \"../../redux/selectors/user-selector\";\r\n\r\ntype PropsType = {\r\n    setUserInfo: React.Dispatch<React.SetStateAction<any>>\r\n}\r\n\r\ntype ValuesType = {\r\n    login: string;\r\n    password: string;\r\n}\r\n\r\ntype CustomTextInputPropsType = {\r\n    name: string,\r\n    type: string,\r\n    label: string,\r\n    validate?: (value: any) => undefined | string | Promise<any>\r\n}\r\n\r\nconst Auth = () => {\r\n    const authError = useSelector(GetAuthError);\r\n    const dispatch = useDispatch();\r\n\r\n    const initValues: ValuesType = {\r\n        login: '',\r\n        password: ''\r\n    };\r\n\r\n    const authValidateSchema = Yup.object({\r\n        login: Yup.string().required('Обязательное поле'),\r\n        password: Yup.string().required('Обязательное поле')\r\n    });\r\n\r\n    const submit = async (values: FormikValues, actions:any) => {\r\n        await dispatch(LogInUser(values.login, values.password));\r\n        actions.setSubmitting(true);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initValues}\r\n            validationSchema={authValidateSchema}\r\n            onSubmit={submit}\r\n        >\r\n            {() => (\r\n                <div className={style.formContainer}>\r\n                    <Form className={style.form}>\r\n                        <p className=\"font_usual-center\">АВТОРИЗАЦИЯ</p>\r\n                        <AuthTextInput name=\"login\" type=\"text\" label=\"Логин\"/>\r\n                        <AuthTextInput name=\"password\" type=\"password\" label=\"Пароль\"/>\r\n                        {authError && <p style={{color: \"red\"}}>{authError}</p>}\r\n                        <button className=\"button_classic\" type=\"submit\">Войти</button>\r\n                        <NavLink to={\"/reg\"}>Нет учетной записи?</NavLink>\r\n                    </Form>\r\n                </div>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nconst AuthTextInput = (props: CustomTextInputPropsType) => {\r\n    const [field, meta] = useField(props);\r\n\r\n    return (\r\n        <div className={style.inputGroup}>\r\n            <input className={style.inputGroup__input} {...field} {...props}/>\r\n            <label className={style.inputGroup__label} htmlFor={props.name}>{props.label}</label>\r\n            <span className={meta.touched && meta.error ? style.inputGroup__errorVisible : style.inputGroup__errorHidden}\r\n            >\r\n                {meta.error}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramConstructor.jsx",[],["270","271"],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\appData-selector.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\help-selector.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ThunkCreators\\userThunks.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\HelpArticles\\GeneralArticle.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\HelpArticleList\\ArticleList.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\DiagramActionCreators.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\HelpArticles\\EquipmentArticle.jsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\ElementsList\\ElementsList.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\api\\userApi.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\HelpActionCreators.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ThunkCreators\\testingThunks.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\api\\testingApi.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\types\\apiTypes.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\Field.jsx",["272"],"import ReactFlow, {addEdge, Controls, isEdge, ReactFlowProvider, removeElements} from \"react-flow-renderer\";\r\n\r\nimport {\r\n    AddElementOnField,\r\n    DeleteElementFromField, RefreshElementsList, SetSAZOn,\r\n} from \"../../../../../redux/ActionCreators/DiagramActionCreators\";\r\n\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport myStyle from \"../DiagramConstructor.module.css\";\r\nimport NodeComponent from \"./NodeComponent\";\r\nimport Edge from \"./Edge\";\r\nimport ConnectionLine from \"./ConnectionLine\";\r\nimport {RemoveConnections} from \"./HelpFunctions\";\r\n\r\nconst Filed = (props) => {\r\n    const reactFlowWrapper = useRef(null);\r\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n    const [elements, setElements] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=> {\r\n        props.setResultElements(elements);\r\n    },[elements, props]);\r\n\r\n    useEffect(()=>{\r\n        if(props.needCleanField){\r\n            setElements([]);\r\n            dispatch(RefreshElementsList());\r\n            props.setNeedClean(false);\r\n        }\r\n    },[props.needCleanField])\r\n\r\n    const isValidConnection = (connection) => {\r\n        for (let i = 0; i < props.connections.length; i++) {\r\n            let handle = props.connections[i].split('-');\r\n            if (handle[0].substring(0, 1) === connection.target || handle[0].substring(0, 1) === connection.source)\r\n                return false;\r\n            if (handle[1].substring(0, 1) === connection.target || handle[0].substring(0, 1) === connection.source)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const onConnect = (params) => {\r\n        let paramsCopy = {\r\n            ...params,\r\n            id: `${params.source}${params.sourceHandle}-${params.target}${params.targetHandle}`,\r\n            type: 'custom'\r\n        };\r\n\r\n        props.setConnection(connections => [...connections, paramsCopy.id]);\r\n        setElements((els) => addEdge(paramsCopy, els));\r\n    };\r\n\r\n    const onElementsRemove = (elementsToRemove) => {\r\n        let connectionsToRemove = [];\r\n\r\n        elementsToRemove.forEach(el => {\r\n            isEdge(el) ? connectionsToRemove.push(el.id)\r\n                : dispatch(DeleteElementFromField(parseInt(el.id)));\r\n        })\r\n\r\n        props.setConnection(RemoveConnections(props.connections, connectionsToRemove));\r\n        setElements((els) => removeElements(elementsToRemove, els));\r\n    }\r\n\r\n    const onLoad = (_reactFlowInstance) =>\r\n        setReactFlowInstance(_reactFlowInstance);\r\n\r\n    const onDragOver = (event) => {\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = 'move';\r\n    };\r\n\r\n    const onDrop = (event) => {\r\n        event.preventDefault();\r\n        const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n        const [id, image, name, text] = event.dataTransfer.getData('text/plain').split('|');\r\n        const position = reactFlowInstance.project({\r\n            x: event.clientX - reactFlowBounds.left,\r\n            y: event.clientY - reactFlowBounds.top,\r\n        });\r\n        const newNode = {\r\n            id: id,\r\n            type: 'special',\r\n            position,\r\n            data: {label: `${name}`, img: image, text: text, isValidConnection: isValidConnection},\r\n        };\r\n\r\n        if(id===\"19\")\r\n            dispatch(SetSAZOn());\r\n\r\n        setElements((es) => es.concat(newNode));\r\n        props.setResultElements(elements);\r\n        dispatch(AddElementOnField(parseInt(id)));\r\n    };\r\n\r\n    return (\r\n        <div id=\"schema_field\" className={`${myStyle.constructor_field} ${props.smallField && myStyle.small_constructor_field}`}>\r\n            <ReactFlowProvider>\r\n                <div style={props.smallField ? {height: '70vh', width: '33.3vw'} : {height: '70vh', width: '70vw'}} ref={reactFlowWrapper}>\r\n                    <ReactFlow\r\n                        elements={elements}\r\n                        onConnect={onConnect}\r\n                        onElementsRemove={onElementsRemove}\r\n                        onLoad={onLoad}\r\n                        onDrop={onDrop}\r\n                        onDragOver={onDragOver}\r\n                        nodeTypes={{special: NodeComponent}}\r\n                        edgeTypes={{custom: Edge}}\r\n                        connectionLineComponent={ConnectionLine}\r\n                    >\r\n                        <Controls/>\r\n                    </ReactFlow>\r\n                </div>\r\n            </ReactFlowProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filed;\r\n\r\n","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\NodeComponent.jsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\ConnectionLine.jsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\Edge.jsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\SplitDiagramField.jsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\diagram-selector.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\HelpFunctions.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\TestingActionCreators.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\DiagramField.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\testing-selector.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResult.tsx",["273"],"import React, {useEffect, useState} from \"react\";\r\nimport style from \"./ViewResult.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {GetDataSet} from \"../../../redux/ThunkCreators/testingThunks\";\r\nimport {signalKeys, signalTypes} from \"../../../types/generalTypes\";\r\nimport PanelControl from \"./CustomComponents/PanelControl\";\r\nimport MyBarChar from \"./CustomComponents/CustomBarChar\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {GetDataSetSelector} from \"../../../redux/selectors/calc-selector\";\r\nimport {ChangeSignalLevel} from \"../../../redux/ActionCreators/CalcActionsCreators\";\r\nimport {\r\n    GetMeasureTypeByIdRussian,\r\n    GetPointNameTranslation\r\n} from \"../../../functions/PointTestFunctions\";\r\n\r\nconst initialCheckBoxState = {\r\n    signalLevelMax: false,\r\n    signalLevel: true,\r\n    signalLevelMin: false\r\n};\r\n\r\ntype useParamsType = {\r\n    pointName: string,\r\n    typeId: string\r\n}\r\n\r\nconst ViewResult = () => {\r\n    const dataSet = useSelector(GetDataSetSelector);\r\n    const [currentSignalLevel, setCurrentSignalLevel] = useState(signalKeys.signalLevel);\r\n    const [checkBoxState, setCheckBoxState] = useState(initialCheckBoxState);\r\n\r\n    const myDispatch = useDispatch();\r\n    let {pointName, typeId} = useParams<useParamsType>()\r\n\r\n    useEffect(()=>{\r\n        let typeName: string = \"\";\r\n        switch(parseInt(typeId)){\r\n            case signalTypes.Test:\r\n                typeName=\"Test\";\r\n                break;\r\n            case signalTypes.Signal:{\r\n                typeName=\"Signal\";\r\n                break;\r\n            }\r\n            case signalTypes.Back:{\r\n                typeName=\"Back\";\r\n                break;\r\n            }\r\n            case signalTypes.SAZ:{\r\n                typeName=\"SAZ\";\r\n                break;\r\n            }\r\n        }\r\n\r\n        /Floor|Wall|Ceiling/.test(pointName)\r\n            ? myDispatch(GetDataSet(\"FWC\"+typeName))\r\n            : myDispatch(GetDataSet(pointName+typeName));\r\n    },[myDispatch])\r\n\r\n    useEffect(()=>{\r\n        const intervalId = setInterval(() => {\r\n            myDispatch(ChangeSignalLevel());\r\n        }, 1500);\r\n\r\n        return () => clearInterval(intervalId);\r\n    },[myDispatch])\r\n\r\n    return(\r\n        <div className={style.viewer_container}>\r\n            <div className={style.viewer_title}>\r\n                <p>{GetMeasureTypeByIdRussian(parseInt(typeId))}</p>\r\n                <p>Тип конструкции: {GetPointNameTranslation(pointName)}</p>\r\n            </div>\r\n            <div className={style.viewer_field}>\r\n                <PanelControl\r\n                    checkBoxState = {checkBoxState}\r\n                    setCheckBoxState = {setCheckBoxState}\r\n                    setCurrentSignalLevel = {setCurrentSignalLevel}\r\n                />\r\n                <MyBarChar dataSet={dataSet} currentSignalLevel={currentSignalLevel}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewResult;","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\types\\generalTypes.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\functions\\Random.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\PanelControl.tsx",["274","275","276","277"],"import React, {MouseEvent, useState} from \"react\";\r\nimport {DataSetTypeForViewResult, signalKeys, signalTypes, signalTypesString} from \"../../../../types/generalTypes\";\r\nimport style from \"../ViewResult.module.css\";\r\nimport {Redirect, useLocation, useParams} from \"react-router-dom\";\r\nimport {boolean} from \"yup\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AddSignalValuesToStep4} from \"../../../../redux/ActionCreators/CalcActionsCreators\";\r\nimport {GetMeasureTypeById} from \"../../../../functions/PointTestFunctions\";\r\nimport {GetDataSetSignalLevelMax} from \"../../../../redux/selectors/calc-selector\";\r\n\r\ntype PropsType = {\r\n    checkBoxState: {\r\n        signalLevelMax: boolean,\r\n        signalLevel: boolean,\r\n        signalLevelMin: boolean\r\n    },\r\n    setCurrentSignalLevel: React.Dispatch<React.SetStateAction<signalKeys>>,\r\n    setCheckBoxState: React.Dispatch<React.SetStateAction<{ signalLevelMax: boolean, signalLevel: boolean, signalLevelMin: boolean }>>\r\n}\r\ntype useParamsType = {\r\n    pointName: string,\r\n    typeId: string\r\n}\r\nconst PanelControl: React.FC<PropsType> = (props) => {\r\n    const {pointName, typeId} = useParams<useParamsType>();\r\n    const [isDone, setIsDone] = useState<boolean>(false);\r\n    const SignalLevelMax = useSelector(GetDataSetSignalLevelMax);\r\n    const dispatch = useDispatch();\r\n\r\n    const checkBoxHandler = (event: MouseEvent<HTMLInputElement>) => {\r\n        let newCheckBoxState = {\r\n            signalLevelMax: false,\r\n            signalLevel: false,\r\n            signalLevelMin: false\r\n        };\r\n\r\n        for (let key in props.checkBoxState) {\r\n            if (key === event.currentTarget.name) {\r\n                props.setCheckBoxState({...newCheckBoxState, [key]: true});\r\n\r\n                switch (key) {\r\n                    case signalKeys.signalLevelMax:\r\n                        props.setCurrentSignalLevel(signalKeys.signalLevelMax);\r\n                        break;\r\n                    case signalKeys.signalLevel:\r\n                        props.setCurrentSignalLevel(signalKeys.signalLevel);\r\n                        break;\r\n                    case signalKeys.signalLevelMin:\r\n                        props.setCurrentSignalLevel(signalKeys.signalLevelMin);\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const buttonSaveClickHandler = () => {\r\n        if (sessionStorage.getItem(\"currentMeasureSequence\")) {\r\n            let currentMeasureSequenceArray: Array<number> = JSON.parse(sessionStorage.getItem(\"currentMeasureSequence\")!);\r\n            sessionStorage.setItem(\"currentMeasureSequence\", JSON.stringify([...currentMeasureSequenceArray, parseInt(typeId)]));\r\n            dispatch(AddSignalValuesToStep4(signalTypesString[GetMeasureTypeById(parseInt(typeId)) as signalTypesString],\r\n                SignalLevelMax!))\r\n        } else {\r\n            sessionStorage.setItem(\"currentMeasureSequence\", JSON.stringify([parseInt(typeId)]));\r\n            dispatch(AddSignalValuesToStep4(\r\n                signalTypesString[GetMeasureTypeById(parseInt(typeId)) as signalTypesString],\r\n                SignalLevelMax!))\r\n        }\r\n\r\n        setIsDone(true);\r\n    }\r\n\r\n    return (\r\n        isDone\r\n            ? <Redirect to={`/testing/viewPoints/Point/${pointName}`}/>\r\n            : <div className={style.viewer_panel}>\r\n                <div className={style.levelControl}>\r\n                    <p>Уровень</p>\r\n                    <label>\r\n                        <input name=\"signalLevelMax\" type=\"checkbox\" checked={props.checkBoxState.signalLevelMax}\r\n                               onClick={checkBoxHandler}/>\r\n                        Макс.\r\n                    </label>\r\n                    <label>\r\n                        <input name=\"signalLevelMin\" type=\"checkbox\" checked={props.checkBoxState.signalLevelMin}\r\n                               onClick={checkBoxHandler}/>\r\n                        Мин.\r\n                    </label>\r\n                    <label>\r\n                        <input name=\"signalLevel\" type=\"checkbox\" checked={props.checkBoxState.signalLevel}\r\n                               onClick={checkBoxHandler}/>\r\n                        Текущий\r\n                    </label>\r\n                </div>\r\n                <button className=\"button_classic\" onClick={buttonSaveClickHandler}>Сохранить результаты<p>(результаты\r\n                    сохраняются по Макс. уровню)</p></button>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default PanelControl;","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\CustomBarChar.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\CustomTooltip.jsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultPoints\\ViewResultPoints.tsx",["278"],"import React, {useEffect} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport style from \"./ViewResultPoints.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {ResetProgress, ResetSignalValuesToStep4} from \"../../../../redux/ActionCreators/CalcActionsCreators\";\r\n\r\nconst ViewResultPoints = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(ResetProgress());\r\n        dispatch(ResetSignalValuesToStep4());\r\n        sessionStorage.getItem(\"currentMeasureSequence\") && sessionStorage.removeItem(\"currentMeasureSequence\");\r\n    },[])\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.title}>\r\n                <h1>ПРОВЕДЕНИЕ ИЗМЕРЕНИЙ</h1>\r\n                <p>Выберете конструкцию для измерений</p>\r\n            </div>\r\n            <div className={style.grid}>\r\n                <div className={style.grid_elem}>\r\n                    <NavLink to={\"/testing/viewPoints/Point/Door\"}>ДВЕРЬ</NavLink>\r\n                </div>\r\n                <div className={style.grid_elem}>\r\n                    <NavLink to={\"/testing/viewPoints/Point/Battery\"}>БАТАРЕЯ</NavLink>\r\n                </div>\r\n                <div className={style.grid_elem}>\r\n                    <NavLink to={\"/testing/viewPoints/Point/Window\"}>ОКНО</NavLink>\r\n                </div>\r\n                <div className={style.grid_elem}>\r\n                    <NavLink to={\"/testing/viewPoints/Point/Floor\"}>ПОЛ</NavLink>\r\n                </div>\r\n                <div className={style.grid_elem}>\r\n                    <NavLink to={\"/testing/viewPoints/Point/Ceiling\"}>ПОТОЛОК</NavLink>\r\n                </div>\r\n                <div className={style.grid_elem}>\r\n                    <NavLink to={\"/testing/viewPoints/Point/Wall\"}>СТЕНА</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewResultPoints;","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\TestReducers\\testing-reducer.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\TestReducers\\diagramElements-reducer.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\TestReducers\\calc-reducer.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\CalcActionsCreators.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\calc-selector.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Header\\DropMenu.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultPoints\\PointTest.tsx",["279","280"],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultTypes\\PointTypesSelection.tsx",["281","282","283","284","285","286"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport style from \"../ViewResultPoints/ViewResultPoints.module.css\";\r\nimport {NavLink, Redirect, useHistory, useParams} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {SetNextStep, SetStepComplete} from \"../../../../redux/ActionCreators/CalcActionsCreators\";\r\nimport {GetChosenTypes} from \"../../../../functions/PointTestFunctions\";\r\nimport ChosenTypes from \"../ViewResultPoints/ChosenTypes\";\r\nimport SuccessDialog from \"../CustomComponents/SuccessDialog\";\r\nimport MistakeDialog from \"../CustomComponents/MistakeDialog\";\r\n\r\ntype useParamsType = {\r\n    pointName: string\r\n}\r\n\r\nconst PointTypesSelection = (props: any) => {\r\n    let {pointName} = useParams<useParamsType>();\r\n    const history = useHistory();\r\n    const [isFinish, SetIsFinish] = useState<boolean>(false);\r\n    const [isMistake, SetIsMistake] = useState<boolean>(false);\r\n    const [currentMeasures, SetCurrentMeasures] = useState<Array<string>|null>();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        SetCurrentMeasures(GetChosenTypes());\r\n    },[GetChosenTypes])\r\n\r\n    const checkStepRight = () => {\r\n        let success = true;\r\n        if(sessionStorage.getItem(\"currentMeasureSequence\")){\r\n            let currentMeasureSequenceArray: Array<number> = JSON.parse(sessionStorage.getItem(\"currentMeasureSequence\")!);\r\n            switch (props.stepNumber){\r\n                case 1:{\r\n                    if(currentMeasureSequenceArray.length !== 4)\r\n                        success = false;\r\n                    break;\r\n                }\r\n                case 2:{\r\n                    if(currentMeasureSequenceArray.length !== 3)\r\n                        success = false;\r\n                    break;\r\n                }\r\n            }\r\n            if(success){\r\n                for(let i=0;i<currentMeasureSequenceArray.length;i++){\r\n                    if(currentMeasureSequenceArray[i] !== i+1){\r\n                        success = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            success = false;\r\n        }\r\n        if(success){\r\n            sessionStorage.removeItem(\"currentMeasureSequence\");\r\n            SetCurrentMeasures(null);\r\n            SetIsFinish(true);\r\n        }else{\r\n            sessionStorage.removeItem(\"currentMeasureSequence\");\r\n            SetCurrentMeasures(null);\r\n            SetIsMistake(true);\r\n        }\r\n\r\n    }\r\n\r\n    const returnButtonClick = () =>{\r\n        history.push(\"/testing/viewPoints\");\r\n    }\r\n\r\n    return (\r\n        isFinish? <SuccessDialog stepNumber={props.stepNumber} SetIsFinish={SetIsFinish}/>\r\n        : isMistake ? <MistakeDialog SetIsMistake={SetIsMistake}/>\r\n        :<>\r\n            <button className={style.historyBackButton} onClick={returnButtonClick}>Вернуться к выбору конструкции</button>\r\n            <div className={style.pointSelectionContainer}>\r\n                <ChosenTypes\r\n                    currentMeasures={currentMeasures}\r\n                    SetCurrentMeasures={SetCurrentMeasures}\r\n                />\r\n                <div className={style.pointSelectionContent}>\r\n                    <div className={style.pointSelectionGrid}>\r\n                        <div id= \"1\" className={style.grid_types}>\r\n                            <NavLink to={\"/testing/viewPoints/Point/\"+pointName+\"/Measure/1\"}>Измерение тест-сигнала</NavLink>\r\n                        </div>\r\n                        <div id= \"2\" className={style.grid_types}>\r\n                            <NavLink to={\"/testing/viewPoints/Point/\"+pointName+\"/Measure/2\"}>Измерение информативного сигнала и фона</NavLink>\r\n                        </div>\r\n                        <div id= \"3\" className={style.grid_types}>\r\n                            <NavLink to={\"/testing/viewPoints/Point/\"+pointName+\"/Measure/3\"}>Измерение фона</NavLink>\r\n                        </div>\r\n                        <div id= \"4\" className={style.grid_types}>\r\n                            <NavLink to={\"/testing/viewPoints/Point/\"+pointName+\"/Measure/4\"}>Измерение помехи</NavLink>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"button_classic\" onClick={checkStepRight}>Завершить выполнения этапа</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PointTypesSelection;","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\functions\\PointTestFunctions.ts",["287"],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultPoints\\ChosenTypes.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultChoseColumns\\ChoseColumns.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\SuccessDialog.tsx",["288"],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\MistakeDialog.tsx",["289"],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultTableCalc\\TableCalc.tsx",["290"],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\MaterialSelect.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\MaterialTable.tsx",[],{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":16,"column":8,"nodeType":"297","messageId":"298","endLine":16,"endColumn":20},{"ruleId":"295","severity":1,"message":"299","line":5,"column":18,"nodeType":"297","messageId":"298","endLine":5,"endColumn":26},{"ruleId":"295","severity":1,"message":"300","line":8,"column":23,"nodeType":"297","messageId":"298","endLine":8,"endColumn":41},{"ruleId":"295","severity":1,"message":"301","line":8,"column":43,"nodeType":"297","messageId":"298","endLine":8,"endColumn":54},{"ruleId":"295","severity":1,"message":"302","line":10,"column":6,"nodeType":"297","messageId":"298","endLine":10,"endColumn":15},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"303","severity":1,"message":"304","line":32,"column":7,"nodeType":"305","endLine":32,"endColumn":29,"suggestions":"306"},{"ruleId":"303","severity":1,"message":"307","line":58,"column":7,"nodeType":"305","endLine":58,"endColumn":19,"suggestions":"308"},{"ruleId":"295","severity":1,"message":"309","line":2,"column":9,"nodeType":"297","messageId":"298","endLine":2,"endColumn":33},{"ruleId":"295","severity":1,"message":"310","line":2,"column":47,"nodeType":"297","messageId":"298","endLine":2,"endColumn":58},{"ruleId":"295","severity":1,"message":"311","line":4,"column":19,"nodeType":"297","messageId":"298","endLine":4,"endColumn":30},{"ruleId":"295","severity":1,"message":"312","line":5,"column":9,"nodeType":"297","messageId":"298","endLine":5,"endColumn":16},{"ruleId":"303","severity":1,"message":"313","line":14,"column":7,"nodeType":"305","endLine":14,"endColumn":9,"suggestions":"314"},{"ruleId":"303","severity":1,"message":"313","line":58,"column":7,"nodeType":"305","endLine":58,"endColumn":9,"suggestions":"315"},{"ruleId":"303","severity":1,"message":"316","line":83,"column":7,"nodeType":"305","endLine":83,"endColumn":34,"suggestions":"317"},{"ruleId":"295","severity":1,"message":"318","line":1,"column":16,"nodeType":"297","messageId":"298","endLine":1,"endColumn":27},{"ruleId":"295","severity":1,"message":"299","line":3,"column":18,"nodeType":"297","messageId":"298","endLine":3,"endColumn":26},{"ruleId":"295","severity":1,"message":"319","line":5,"column":9,"nodeType":"297","messageId":"298","endLine":5,"endColumn":20},{"ruleId":"295","severity":1,"message":"320","line":5,"column":22,"nodeType":"297","messageId":"298","endLine":5,"endColumn":37},{"ruleId":"295","severity":1,"message":"321","line":21,"column":11,"nodeType":"297","messageId":"298","endLine":21,"endColumn":19},{"ruleId":"303","severity":1,"message":"322","line":25,"column":7,"nodeType":"305","endLine":25,"endColumn":23,"suggestions":"323"},{"ruleId":"295","severity":1,"message":"324","line":141,"column":11,"nodeType":"297","messageId":"298","endLine":141,"endColumn":17},{"ruleId":"295","severity":1,"message":"325","line":10,"column":9,"nodeType":"297","messageId":"298","endLine":10,"endColumn":28},{"ruleId":"295","severity":1,"message":"326","line":6,"column":9,"nodeType":"297","messageId":"298","endLine":6,"endColumn":20},{"ruleId":"295","severity":1,"message":"327","line":1,"column":16,"nodeType":"297","messageId":"298","endLine":1,"endColumn":25},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"@typescript-eslint/no-unused-vars","'ChoseColumns' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'GetUserAccessToken' is defined but never used.","'GetUserInfo' is defined but never used.","'PropsType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["330"],"React Hook useEffect has missing dependencies: 'pointName' and 'typeId'. Either include them or remove the dependency array.",["331"],"'DataSetTypeForViewResult' is defined but never used.","'signalTypes' is defined but never used.","'useLocation' is defined but never used.","'boolean' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["332"],["333"],"React Hook useEffect has a missing dependency: 'pointProgress'. Either include it or remove the dependency array.",["334"],"'useCallback' is defined but never used.","'SetNextStep' is defined but never used.","'SetStepComplete' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'GetChosenTypes'. Either exclude it or remove the dependency array. Outer scope values like 'GetChosenTypes' aren't valid dependencies because mutating them doesn't re-render the component.",["335"],"'parser' is assigned a value but never used.","'formatAngleOfSector' is defined but never used.","'useDispatch' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"340","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},"Update the dependencies array to be: [dispatch, props, props.needCleanField]",{"range":"347","text":"348"},"Update the dependencies array to be: [myDispatch, pointName, typeId]",{"range":"349","text":"350"},"Update the dependencies array to be: [dispatch]",{"range":"351","text":"352"},{"range":"353","text":"352"},"Update the dependencies array to be: [pointProgress, pointProgress.currentStep]",{"range":"354","text":"355"},"Update the dependencies array to be: []",{"range":"356","text":"357"},[1128,1150],"[dispatch, props, props.needCleanField]",[1981,1993],"[myDispatch, pointName, typeId]",[590,592],"[dispatch]",[2250,2252],[3117,3144],"[pointProgress, pointProgress.currentStep]",[1125,1141],"[]"]