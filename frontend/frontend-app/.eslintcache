[{"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\index.tsx":"1","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\store.ts":"2","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\App.tsx":"3","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\help-reducer.ts":"4","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\appData-reducer.ts":"5","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\user-reducer.ts":"6","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\UserActionCreators.ts":"7","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\user-selector.ts":"8","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\hoc\\withSuspense.tsx":"9","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Header\\Header.tsx":"10","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Main\\Main.tsx":"11","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Testing.tsx":"12","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Registration\\Registration.tsx":"13","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\Help.tsx":"14","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Auth\\Auth.tsx":"15","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramConstructor.jsx":"16","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\appData-selector.ts":"17","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\help-selector.ts":"18","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ThunkCreators\\userThunks.ts":"19","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section.tsx":"20","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\HelpArticles\\GeneralArticle.tsx":"21","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\HelpArticleList\\ArticleList.tsx":"22","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\DiagramActionCreators.ts":"23","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\HelpArticles\\EquipmentArticle.jsx":"24","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\ElementsList\\ElementsList.tsx":"25","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\api\\userApi.ts":"26","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\HelpActionCreators.ts":"27","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ThunkCreators\\testingThunks.ts":"28","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\api\\testingApi.ts":"29","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\types\\apiTypes.ts":"30","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\Field.jsx":"31","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\NodeComponent.jsx":"32","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\ConnectionLine.jsx":"33","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\Edge.jsx":"34","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\SplitDiagramField.jsx":"35","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\diagram-selector.ts":"36","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\HelpFunctions.ts":"37","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\TestingActionCreators.ts":"38","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\DiagramField.tsx":"39","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\testing-selector.ts":"40","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResult.tsx":"41","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\types\\generalTypes.ts":"42","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\functions\\Random.ts":"43","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\PanelControl.tsx":"44","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\CustomBarChar.tsx":"45","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\CustomTooltip.jsx":"46","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultPoints\\ViewResultPoints.tsx":"47","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultPoints\\ViewResultPoint.tsx":"48","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\TestReducers\\testing-reducer.ts":"49","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\TestReducers\\diagramElements-reducer.ts":"50","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\TestReducers\\calc-reducer.ts":"51","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\CalcActionsCreators.ts":"52","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\calc-selector.ts":"53","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Header\\DropMenu.tsx":"54"},{"size":395,"mtime":1621502225672,"results":"55","hashOfConfig":"56"},{"size":1056,"mtime":1621490426025,"results":"57","hashOfConfig":"56"},{"size":2636,"mtime":1621489716691,"results":"58","hashOfConfig":"56"},{"size":576,"mtime":1619960079434,"results":"59","hashOfConfig":"56"},{"size":1610,"mtime":1621422772480,"results":"60","hashOfConfig":"56"},{"size":3071,"mtime":1619960079434,"results":"61","hashOfConfig":"56"},{"size":940,"mtime":1619960079418,"results":"62","hashOfConfig":"56"},{"size":1103,"mtime":1619960079434,"results":"63","hashOfConfig":"56"},{"size":310,"mtime":1619960079418,"results":"64","hashOfConfig":"56"},{"size":1105,"mtime":1621509509453,"results":"65","hashOfConfig":"56"},{"size":1165,"mtime":1619960079403,"results":"66","hashOfConfig":"56"},{"size":469,"mtime":1619960079418,"results":"67","hashOfConfig":"56"},{"size":8495,"mtime":1619960079403,"results":"68","hashOfConfig":"56"},{"size":1321,"mtime":1619960079403,"results":"69","hashOfConfig":"56"},{"size":2849,"mtime":1620889275956,"results":"70","hashOfConfig":"56"},{"size":4973,"mtime":1620881363244,"results":"71","hashOfConfig":"56"},{"size":179,"mtime":1619960079434,"results":"72","hashOfConfig":"56"},{"size":137,"mtime":1619960079434,"results":"73","hashOfConfig":"56"},{"size":2312,"mtime":1619960079418,"results":"74","hashOfConfig":"56"},{"size":953,"mtime":1619960079403,"results":"75","hashOfConfig":"56"},{"size":4135,"mtime":1619960079403,"results":"76","hashOfConfig":"56"},{"size":878,"mtime":1619960079403,"results":"77","hashOfConfig":"56"},{"size":1179,"mtime":1620129894939,"results":"78","hashOfConfig":"56"},{"size":8558,"mtime":1619960079403,"results":"79","hashOfConfig":"56"},{"size":1858,"mtime":1620107553617,"results":"80","hashOfConfig":"56"},{"size":1429,"mtime":1619960079371,"results":"81","hashOfConfig":"56"},{"size":165,"mtime":1619960079418,"results":"82","hashOfConfig":"56"},{"size":2813,"mtime":1621496367312,"results":"83","hashOfConfig":"56"},{"size":2851,"mtime":1621489464871,"results":"84","hashOfConfig":"56"},{"size":1433,"mtime":1620886741363,"results":"85","hashOfConfig":"56"},{"size":4579,"mtime":1620132569382,"results":"86","hashOfConfig":"56"},{"size":969,"mtime":1620110316473,"results":"87","hashOfConfig":"56"},{"size":565,"mtime":1620045974170,"results":"88","hashOfConfig":"56"},{"size":698,"mtime":1620045974230,"results":"89","hashOfConfig":"56"},{"size":1707,"mtime":1620132552268,"results":"90","hashOfConfig":"56"},{"size":586,"mtime":1620118458977,"results":"91","hashOfConfig":"56"},{"size":1777,"mtime":1620128347541,"results":"92","hashOfConfig":"56"},{"size":432,"mtime":1621490737504,"results":"93","hashOfConfig":"56"},{"size":1617,"mtime":1620138008124,"results":"94","hashOfConfig":"56"},{"size":13,"mtime":1621490638685,"results":"95","hashOfConfig":"56"},{"size":2238,"mtime":1621490733446,"results":"96","hashOfConfig":"56"},{"size":1643,"mtime":1621433197375,"results":"97","hashOfConfig":"56"},{"size":143,"mtime":1620908680993,"results":"98","hashOfConfig":"56"},{"size":2723,"mtime":1621492111495,"results":"99","hashOfConfig":"56"},{"size":1087,"mtime":1621417110370,"results":"100","hashOfConfig":"56"},{"size":1082,"mtime":1621417110351,"results":"101","hashOfConfig":"56"},{"size":1554,"mtime":1621431685830,"results":"102","hashOfConfig":"56"},{"size":7526,"mtime":1621491062615,"results":"103","hashOfConfig":"56"},{"size":1323,"mtime":1621490513061,"results":"104","hashOfConfig":"56"},{"size":4143,"mtime":1621490426047,"results":"105","hashOfConfig":"56"},{"size":4155,"mtime":1621490975376,"results":"106","hashOfConfig":"56"},{"size":591,"mtime":1621490888294,"results":"107","hashOfConfig":"56"},{"size":1767,"mtime":1621490575104,"results":"108","hashOfConfig":"56"},{"size":3557,"mtime":1621517804303,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"6iym17",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"144"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\index.tsx",[],["224","225"],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\store.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\App.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\help-reducer.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\appData-reducer.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\user-reducer.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\UserActionCreators.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\user-selector.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\hoc\\withSuspense.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Main\\Main.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Testing.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Registration\\Registration.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\Help.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Auth\\Auth.tsx",["226","227","228","229"],"import React from \"react\";\r\nimport {Form, Formik, FormikValues, useField} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport style from \"./Auth.module.css\"\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {LogInUser} from \"../../redux/ThunkCreators/userThunks\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {GetAuthError, GetUserAccessToken, GetUserInfo} from \"../../redux/selectors/user-selector\";\r\n\r\ntype PropsType = {\r\n    setUserInfo: React.Dispatch<React.SetStateAction<any>>\r\n}\r\n\r\ntype ValuesType = {\r\n    login: string;\r\n    password: string;\r\n}\r\n\r\ntype CustomTextInputPropsType = {\r\n    name: string,\r\n    type: string,\r\n    label: string,\r\n    validate?: (value: any) => undefined | string | Promise<any>\r\n}\r\n\r\nconst Auth = () => {\r\n    const authError = useSelector(GetAuthError);\r\n    const dispatch = useDispatch();\r\n\r\n    const initValues: ValuesType = {\r\n        login: '',\r\n        password: ''\r\n    };\r\n\r\n    const authValidateSchema = Yup.object({\r\n        login: Yup.string().required('Обязательное поле'),\r\n        password: Yup.string().required('Обязательное поле')\r\n    });\r\n\r\n    const submit = async (values: FormikValues, actions:any) => {\r\n        await dispatch(LogInUser(values.login, values.password));\r\n        actions.setSubmitting(true);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initValues}\r\n            validationSchema={authValidateSchema}\r\n            onSubmit={submit}\r\n        >\r\n            {() => (\r\n                <div className={style.formContainer}>\r\n                    <Form className={style.form}>\r\n                        <p className=\"font_usual-center\">АВТОРИЗАЦИЯ</p>\r\n                        <AuthTextInput name=\"login\" type=\"text\" label=\"Логин\"/>\r\n                        <AuthTextInput name=\"password\" type=\"password\" label=\"Пароль\"/>\r\n                        {authError && <p style={{color: \"red\"}}>{authError}</p>}\r\n                        <button className=\"button_classic\" type=\"submit\">Войти</button>\r\n                        <NavLink to={\"/reg\"}>Нет учетной записи?</NavLink>\r\n                    </Form>\r\n                </div>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nconst AuthTextInput = (props: CustomTextInputPropsType) => {\r\n    const [field, meta] = useField(props);\r\n\r\n    return (\r\n        <div className={style.inputGroup}>\r\n            <input className={style.inputGroup__input} {...field} {...props}/>\r\n            <label className={style.inputGroup__label} htmlFor={props.name}>{props.label}</label>\r\n            <span className={meta.touched && meta.error ? style.inputGroup__errorVisible : style.inputGroup__errorHidden}\r\n            >\r\n                {meta.error}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramConstructor.jsx",[],["230","231"],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\appData-selector.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\help-selector.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ThunkCreators\\userThunks.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\HelpArticles\\GeneralArticle.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\HelpArticleList\\ArticleList.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\DiagramActionCreators.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Help\\HelpArticles\\EquipmentArticle.jsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\ElementsList\\ElementsList.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\api\\userApi.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\HelpActionCreators.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ThunkCreators\\testingThunks.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\api\\testingApi.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\types\\apiTypes.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\Field.jsx",["232"],"import ReactFlow, {addEdge, Controls, isEdge, ReactFlowProvider, removeElements} from \"react-flow-renderer\";\r\n\r\nimport {\r\n    AddElementOnField,\r\n    DeleteElementFromField, RefreshElementsList, SetSAZOn,\r\n} from \"../../../../../redux/ActionCreators/DiagramActionCreators\";\r\n\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport myStyle from \"../DiagramConstructor.module.css\";\r\nimport NodeComponent from \"./NodeComponent\";\r\nimport Edge from \"./Edge\";\r\nimport ConnectionLine from \"./ConnectionLine\";\r\nimport {RemoveConnections} from \"./HelpFunctions\";\r\n\r\nconst Filed = (props) => {\r\n    const reactFlowWrapper = useRef(null);\r\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n    const [elements, setElements] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=> {\r\n        props.setResultElements(elements);\r\n    },[elements, props]);\r\n\r\n    useEffect(()=>{\r\n        if(props.needCleanField){\r\n            setElements([]);\r\n            dispatch(RefreshElementsList());\r\n            props.setNeedClean(false);\r\n        }\r\n    },[props.needCleanField])\r\n\r\n    const isValidConnection = (connection) => {\r\n        for (let i = 0; i < props.connections.length; i++) {\r\n            let handle = props.connections[i].split('-');\r\n            if (handle[0].substring(0, 1) === connection.target || handle[0].substring(0, 1) === connection.source)\r\n                return false;\r\n            if (handle[1].substring(0, 1) === connection.target || handle[0].substring(0, 1) === connection.source)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const onConnect = (params) => {\r\n        let paramsCopy = {\r\n            ...params,\r\n            id: `${params.source}${params.sourceHandle}-${params.target}${params.targetHandle}`,\r\n            type: 'custom'\r\n        };\r\n\r\n        props.setConnection(connections => [...connections, paramsCopy.id]);\r\n        setElements((els) => addEdge(paramsCopy, els));\r\n    };\r\n\r\n    const onElementsRemove = (elementsToRemove) => {\r\n        let connectionsToRemove = [];\r\n\r\n        elementsToRemove.forEach(el => {\r\n            isEdge(el) ? connectionsToRemove.push(el.id)\r\n                : dispatch(DeleteElementFromField(parseInt(el.id)));\r\n        })\r\n\r\n        props.setConnection(RemoveConnections(props.connections, connectionsToRemove));\r\n        setElements((els) => removeElements(elementsToRemove, els));\r\n    }\r\n\r\n    const onLoad = (_reactFlowInstance) =>\r\n        setReactFlowInstance(_reactFlowInstance);\r\n\r\n    const onDragOver = (event) => {\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = 'move';\r\n    };\r\n\r\n    const onDrop = (event) => {\r\n        event.preventDefault();\r\n        const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n        const [id, image, name, text] = event.dataTransfer.getData('text/plain').split('|');\r\n        const position = reactFlowInstance.project({\r\n            x: event.clientX - reactFlowBounds.left,\r\n            y: event.clientY - reactFlowBounds.top,\r\n        });\r\n        const newNode = {\r\n            id: id,\r\n            type: 'special',\r\n            position,\r\n            data: {label: `${name}`, img: image, text: text, isValidConnection: isValidConnection},\r\n        };\r\n\r\n        if(id===\"19\")\r\n            dispatch(SetSAZOn());\r\n\r\n        setElements((es) => es.concat(newNode));\r\n        props.setResultElements(elements);\r\n        dispatch(AddElementOnField(parseInt(id)));\r\n    };\r\n\r\n    return (\r\n        <div id=\"schema_field\" className={`${myStyle.constructor_field} ${props.smallField && myStyle.small_constructor_field}`}>\r\n            <ReactFlowProvider>\r\n                <div style={props.smallField ? {height: '70vh', width: '33.3vw'} : {height: '70vh', width: '70vw'}} ref={reactFlowWrapper}>\r\n                    <ReactFlow\r\n                        elements={elements}\r\n                        onConnect={onConnect}\r\n                        onElementsRemove={onElementsRemove}\r\n                        onLoad={onLoad}\r\n                        onDrop={onDrop}\r\n                        onDragOver={onDragOver}\r\n                        nodeTypes={{special: NodeComponent}}\r\n                        edgeTypes={{custom: Edge}}\r\n                        connectionLineComponent={ConnectionLine}\r\n                    >\r\n                        <Controls/>\r\n                    </ReactFlow>\r\n                </div>\r\n            </ReactFlowProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filed;\r\n\r\n","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\NodeComponent.jsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\ConnectionLine.jsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\Edge.jsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\SplitDiagramField.jsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\diagram-selector.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\HelpFunctions.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\TestingActionCreators.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section1\\DiagramConstructor\\DiagramComponentsAndFunctions\\DiagramField.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\testing-selector.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResult.tsx",["233"],"import React, {useEffect, useState} from \"react\";\r\nimport style from \"./ViewResult.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {GetDataSet} from \"../../../redux/ThunkCreators/testingThunks\";\r\nimport {signalKeys} from \"../../../types/generalTypes\";\r\nimport PanelControl from \"./CustomComponents/PanelControl\";\r\nimport MyBarChar from \"./CustomComponents/CustomBarChar\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {GetDataSetSelector} from \"../../../redux/selectors/calc-selector\";\r\nimport {ChangeSignalLevel} from \"../../../redux/ActionCreators/CalcActionsCreators\";\r\n\r\nconst initialCheckBoxState = {\r\n    signalLevelMax: false,\r\n    signalLevel: true,\r\n    signalLevelMin: false\r\n};\r\n\r\ntype useParamsType = {\r\n    pointName: string,\r\n    typeName: string\r\n}\r\n\r\nconst ViewResult = () => {\r\n    const dataSet = useSelector(GetDataSetSelector);\r\n    const [currentSignalLevel, setCurrentSignalLevel] = useState(signalKeys.signalLevel);\r\n    const [checkBoxState, setCheckBoxState] = useState(initialCheckBoxState);\r\n\r\n    const myDispatch = useDispatch();\r\n    let {pointName, typeName} = useParams<useParamsType>()\r\n\r\n    useEffect(()=>{\r\n        /Floor|Wall|Ceiling/.test(pointName)\r\n            ? myDispatch(GetDataSet(\"FWC\"+typeName))\r\n            : myDispatch(GetDataSet(pointName+typeName));\r\n    },[myDispatch])\r\n\r\n    useEffect(()=>{\r\n        const intervalId = setInterval(() => {\r\n            myDispatch(ChangeSignalLevel());\r\n        }, 1500);\r\n\r\n        return () => clearInterval(intervalId);\r\n    },[myDispatch])\r\n\r\n    return(\r\n        <div className={style.viewer_container}>\r\n            <div className={style.viewer_title}>\r\n                <h1>Просмотр результатов снятия сигнала</h1>\r\n            </div>\r\n            <div className={style.viewer_field}>\r\n                <PanelControl\r\n                    checkBoxState = {checkBoxState}\r\n                    setCheckBoxState = {setCheckBoxState}\r\n                    setCurrentSignalLevel = {setCurrentSignalLevel}\r\n                />\r\n                <MyBarChar dataSet={dataSet} currentSignalLevel={currentSignalLevel}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewResult;","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\types\\generalTypes.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\functions\\Random.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\PanelControl.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\CustomBarChar.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\CustomComponents\\CustomTooltip.jsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultPoints\\ViewResultPoints.tsx",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Testing\\Section3\\ViewResultPoints\\ViewResultPoint.tsx",["234"],"import React, {useEffect, useState} from \"react\";\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport style from \"./ViewResultPoints.module.css\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {ClearDataSet} from \"../../../../redux/ActionCreators/CalcActionsCreators\";\r\n\r\ntype useParamsType = {\r\n    pointName: string\r\n}\r\n\r\nconst localState = {\r\n    calculationInfo: [\r\n        {\r\n            id: 0,\r\n            pointName: \"Door\",\r\n            pointTitle: \"Дверь\",\r\n            results: [{\r\n                id:0,\r\n                typeName: \"Test\",\r\n                typeTitle: \"Измерение тест-сигнала\",\r\n                result: false,\r\n            }, {\r\n                id:1,\r\n                typeName: \"Signal\",\r\n                typeTitle: \"Измерение информативного сигнала и фона\",\r\n                result: false,\r\n            }, {\r\n                id:2,\r\n                typeName: \"Back\",\r\n                typeTitle: \"Измерение фона\",\r\n                result: false,\r\n            }, {\r\n                id:3,\r\n                typeName: \"SAZ\",\r\n                typeTitle: \"Измерение помехи\",\r\n                result: false,\r\n            }\r\n            ]\r\n        }, {\r\n            id: 1,\r\n            pointName: \"Battery\",\r\n            pointTitle: \"Батарея\",\r\n            results: [{\r\n                id:0,\r\n                typeName: \"Test\",\r\n                typeTitle: \"Измерение тест-сигнала\",\r\n                result: false,\r\n            }, {\r\n                id:1,\r\n                typeName: \"Signal\",\r\n                typeTitle: \"Измерение информативного сигнала и фона\",\r\n                result: false,\r\n            }, {\r\n                id:2,\r\n                typeName: \"Back\",\r\n                typeTitle: \"Измерение фона\",\r\n                result: false,\r\n            }, {\r\n                id:3,\r\n                typeName: \"SAZ\",\r\n                typeTitle: \"Измерение помехи\",\r\n                result: false,\r\n            }\r\n            ]\r\n        }, {\r\n            id:2,\r\n            pointName: \"Window\",\r\n            pointTitle: \"Окно\",\r\n            results: [{\r\n                id:0,\r\n                typeName: \"Test\",\r\n                typeTitle: \"Измерение тест-сигнала\",\r\n                result: false,\r\n            }, {\r\n                id:1,\r\n                typeName: \"Signal\",\r\n                typeTitle: \"Измерение информативного сигнала и фона\",\r\n                result: false,\r\n            }, {\r\n                id:2,\r\n                typeName: \"Back\",\r\n                typeTitle: \"Измерение фона\",\r\n                result: false,\r\n            }, {\r\n                id:3,\r\n                typeName: \"SAZ\",\r\n                typeTitle: \"Измерение помехи\",\r\n                result: false,\r\n            }\r\n            ]\r\n        }, {\r\n            id:3,\r\n            pointName: \"Floor\",\r\n            pointTitle: \"Пол\",\r\n            results: [{\r\n                id:0,\r\n                typeName: \"Test\",\r\n                typeTitle: \"Измерение тест-сигнала\",\r\n                result: false,\r\n            }, {\r\n                id:1,\r\n                typeName: \"Signal\",\r\n                typeTitle: \"Измерение информативного сигнала и фона\",\r\n                result: false,\r\n            }, {\r\n                id:2,\r\n                typeName: \"Back\",\r\n                typeTitle: \"Измерение фона\",\r\n                result: false,\r\n            }, {\r\n                id:3,\r\n                typeName: \"SAZ\",\r\n                typeTitle: \"Измерение помехи\",\r\n                result: false,\r\n            }\r\n            ]\r\n        }, {\r\n            id:4,\r\n            pointName: \"Ceiling\",\r\n            pointTitle: \"Потолок\",\r\n            results: [{\r\n                id:0,\r\n                typeName: \"Test\",\r\n                typeTitle: \"Измерение тест-сигнала\",\r\n                result: false,\r\n            }, {\r\n                id:1,\r\n                typeName: \"Signal\",\r\n                typeTitle: \"Измерение информативного сигнала и фона\",\r\n                result: false,\r\n            }, {\r\n                id:2,\r\n                typeName: \"Back\",\r\n                typeTitle: \"Измерение фона\",\r\n                result: false,\r\n            }, {\r\n                id:3,\r\n                typeName: \"SAZ\",\r\n                typeTitle: \"Измерение помехи\",\r\n                result: false,\r\n            }\r\n            ]\r\n        }, {\r\n            id:5,\r\n            pointName: \"Wall\",\r\n            pointTitle: \"Стена\",\r\n            results: [{\r\n                id:0,\r\n                typeName: \"Test\",\r\n                typeTitle: \"Измерение тест-сигнала\",\r\n                result: false,\r\n            }, {\r\n                id:1,\r\n                typeName: \"Signal\",\r\n                typeTitle: \"Измерение информативного сигнала и фона\",\r\n                result: false,\r\n            }, {\r\n                id:2,\r\n                typeName: \"Back\",\r\n                typeTitle: \"Измерение фона\",\r\n                result: false,\r\n            }, {\r\n                id:3,\r\n                typeName: \"SAZ\",\r\n                typeTitle: \"Измерение помехи\",\r\n                result: false,\r\n            }\r\n            ]\r\n        }\r\n    ],\r\n    summaryResults:[[false,false,false,false], [false,false,false,false],\r\n        [false,false,false,false],[false,false,false,false],\r\n        [false,false,false,false],[false,false,false,false]]\r\n}\r\n\r\n\r\nconst ViewResultPoint = () => {\r\n    let {pointName} = useParams<useParamsType>();\r\n    const [pointTitle, SetTitleName] = useState<string>(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        SetTitleName(localState.calculationInfo.find(el => el.pointName === pointName)!.pointTitle);\r\n        dispatch(ClearDataSet());\r\n    },[])\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.title}>\r\n                <h1>ПРОВЕДЕНИЕ ИЗМЕРЕНИЙ</h1>\r\n                <p>Тип конструкции: {pointTitle}.<br/>Выберете тип измерений.</p>\r\n            </div>\r\n            <div className={style.grid}>\r\n                <div className={style.grid_types}>\r\n                    <NavLink to={\"/testing/viewPoints/Point/\"+pointName+\"/Calc/Test\"}>Измерение тест-сигнала</NavLink>\r\n                </div>\r\n                <div className={style.grid_types}>\r\n                    <NavLink to={\"/testing/viewPoints/Point/\"+pointName+\"/Calc/Signal\"}>Измерение информативного сигнала и фона</NavLink>\r\n                </div>\r\n                <div className={style.grid_types}>\r\n                    <NavLink to={\"/testing/viewPoints/Point/\"+pointName+\"/Calc/Back\"}>Измерение фона</NavLink>\r\n                </div>\r\n                <div className={style.grid_types}>\r\n                    <NavLink to={\"/testing/viewPoints/Point/\"+pointName+\"/Calc/SAZ\"}>Измерение помехи</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewResultPoint;","C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\TestReducers\\testing-reducer.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\TestReducers\\diagramElements-reducer.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\reducers\\TestReducers\\calc-reducer.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\ActionCreators\\CalcActionsCreators.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\redux\\selectors\\calc-selector.ts",[],"C:\\Users\\volko\\Desktop\\main\\myProjects\\TritoneProject\\frontend\\frontend-app\\src\\components\\Header\\DropMenu.tsx",[],{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":5,"column":18,"nodeType":"241","messageId":"242","endLine":5,"endColumn":26},{"ruleId":"239","severity":1,"message":"243","line":8,"column":23,"nodeType":"241","messageId":"242","endLine":8,"endColumn":41},{"ruleId":"239","severity":1,"message":"244","line":8,"column":43,"nodeType":"241","messageId":"242","endLine":8,"endColumn":54},{"ruleId":"239","severity":1,"message":"245","line":10,"column":6,"nodeType":"241","messageId":"242","endLine":10,"endColumn":15},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"246","severity":1,"message":"247","line":32,"column":7,"nodeType":"248","endLine":32,"endColumn":29,"suggestions":"249"},{"ruleId":"246","severity":1,"message":"250","line":35,"column":7,"nodeType":"248","endLine":35,"endColumn":19,"suggestions":"251"},{"ruleId":"246","severity":1,"message":"252","line":186,"column":7,"nodeType":"248","endLine":186,"endColumn":9,"suggestions":"253"},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'GetUserAccessToken' is defined but never used.","'GetUserInfo' is defined but never used.","'PropsType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["256"],"React Hook useEffect has missing dependencies: 'pointName' and 'typeName'. Either include them or remove the dependency array.",["257"],"React Hook useEffect has missing dependencies: 'dispatch' and 'pointName'. Either include them or remove the dependency array.",["258"],"no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [dispatch, props, props.needCleanField]",{"range":"265","text":"266"},"Update the dependencies array to be: [myDispatch, pointName, typeName]",{"range":"267","text":"268"},"Update the dependencies array to be: [dispatch, pointName]",{"range":"269","text":"270"},[1128,1150],"[dispatch, props, props.needCleanField]",[1342,1354],"[myDispatch, pointName, typeName]",[5695,5697],"[dispatch, pointName]"]